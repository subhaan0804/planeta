<!-- <!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hotel Search</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }

        h1 {
            text-align: center;
            color: #2e7d32;
            margin-bottom: 30px;
        }

        .search-container {
            max-width: 600px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
        }

        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .submit-btn {
            width: 100%;
            padding: 10px;
            background-color: #2e7d32;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

        .submit-btn:hover {
            background-color: #1b5e20;
        }

        .loading {
            text-align: center;
            margin: 20px 0;
            display: none;
        }

        .error {
            color: #c62828;
            text-align: center;
            margin: 10px 0;
            display: none;
        }

        .hotels-container {
            margin-top: 30px;
            display: grid;
            gap: 20px;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        }

        .hotel-card {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .hotel-name {
            color: #2e7d32;
            margin-top: 0;
            margin-bottom: 10px;
        }

        .sustainability-rating {
            color: white;
            background: #2e7d32;
            padding: 5px 10px;
            border-radius: 15px;
            display: inline-block;
            margin-bottom: 10px;
        }

        .hotel-features {
            margin: 10px 0;
        }

        .feature-list {
            list-style-type: none;
            padding: 0;
        }

        .feature-list li {
            margin-bottom: 5px;
            padding-left: 20px;
            position: relative;
        }

        .feature-list li::before {
            content: "â€¢";
            color: #2e7d32;
            position: absolute;
            left: 0;
        }
    </style>
</head>
<body>
    <h1>Eco-Friendly Hotel Search</h1>
    
    <div class="search-container">
        <form id="searchForm">
            <div class="form-group">
                <label for="country">Country:</label>
                <input type="text" id="country" name="country" placeholder="Enter country">
            </div>
            <div class="form-group">
                <label for="city">City:</label>
                <input type="text" id="city" name="city" placeholder="Enter city">
            </div>
            <button type="submit" class="submit-btn">Search Hotels</button>
        </form>
    </div>

    <div id="loading" class="loading">Searching for eco-friendly hotels...</div>
    <div id="error" class="error"></div>
    <div id="hotels-container" class="hotels-container"></div>

    <script>
        const searchForm = document.getElementById('searchForm');
        const loadingDiv = document.getElementById('loading');
        const errorDiv = document.getElementById('error');
        const hotelsContainer = document.getElementById('hotels-container');

        searchForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const country = document.getElementById('country').value.trim();
            const city = document.getElementById('city').value.trim();

            if (!country && !city) {
                showError('Please enter at least one search criteria');
                return;
            }

            showLoading(true);
            clearResults();
            hideError();

            try {
                const response = await fetch('/api/hotels', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ country, city })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const hotels = await response.json();
                displayHotels(hotels);
            } catch (error) {
                showError('An error occurred while searching for hotels. Please try again.');
                console.error('Search error:', error);
            } finally {
                showLoading(false);
            }
        });

        function showLoading(show) {
            loadingDiv.style.display = show ? 'block' : 'none';
        }

        function showError(message) {
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
        }

        function hideError() {
            errorDiv.style.display = 'none';
        }

        function clearResults() {
            hotelsContainer.innerHTML = '';
        }

        function displayHotels(hotels) {
            if (hotels.length === 0) {
                showError('No hotels found matching your criteria');
                return;
            }

            hotels.forEach(hotel => {
                const hotelCard = document.createElement('div');
                hotelCard.className = 'hotel-card';
                
                hotelCard.innerHTML = `
                    <h2 class="hotel-name">${hotel.hotelName}</h2>
                    <div class="sustainability-rating">
                        Sustainability Rating: ${hotel.sustainabilityRating}/5
                    </div>
                    <p><strong>Location:</strong> ${hotel.location.city}, ${hotel.location.country}</p>
                    <div class="hotel-features">
                        <h3>Overview</h3>
                        <p>${hotel.description.overview}</p>
                        
                        <h3>Sustainability Features</h3>
                        <ul class="feature-list">
                            ${hotel.description.sustainabilityFeatures.map(feature => 
                                `<li>${feature}</li>`
                            ).join('')}
                        </ul>

                        <h3>Amenities</h3>
                        <ul class="feature-list">
                            ${hotel.description.amenities.map(amenity => 
                                `<li>${amenity}</li>`
                            ).join('')}
                        </ul>
                    </div>
                `;
                
                hotelsContainer.appendChild(hotelCard);
            });
        }
    </script>
</body>
</html> -->



<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hotel Search</title>
    <!-- Add Leaflet CSS -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.css" />
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f5f5f5;
        }

        h1 {
            text-align: center;
            color: #2e7d32;
            margin-bottom: 30px;
        }

        .search-container {
            max-width: 600px;
            margin: 0 auto 30px;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
        }

        .form-group input {
            width: 100%;
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
            box-sizing: border-box;
        }

        .submit-btn {
            width: 100%;
            padding: 10px;
            background-color: #2e7d32;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

        .submit-btn:hover {
            background-color: #1b5e20;
        }

        .loading, .error {
            text-align: center;
            margin: 20px 0;
            display: none;
        }

        .error {
            color: #c62828;
        }

        /* New styles for the hotel card layout */
        .hotel-result {
            display: flex;
            margin-bottom: 30px;
            gap: 20px;
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }

        .hotel-info {
            flex: 1;
            min-width: 300px;
        }

        .map-container {
            flex: 1;
            min-width: 300px;
            height: 500px;
            border-radius: 8px;
            overflow: hidden;
        }

        .hotel-name {
            color: #2e7d32;
            margin-top: 0;
            margin-bottom: 10px;
        }

        .sustainability-rating {
            color: white;
            background: #2e7d32;
            padding: 5px 10px;
            border-radius: 15px;
            display: inline-block;
            margin-bottom: 10px;
        }

        .feature-list {
            list-style-type: none;
            padding: 0;
        }

        .feature-list li {
            margin-bottom: 5px;
            padding-left: 20px;
            position: relative;
        }

        .feature-list li::before {
            content: "â€¢";
            color: #2e7d32;
            position: absolute;
            left: 0;
        }
    </style>
</head>
<body>
    <h1>Eco-Friendly Hotel Search</h1>
    
    <div class="search-container">
        <form id="searchForm">
            <div class="form-group">
                <label for="country">Country:</label>
                <input type="text" id="country" name="country" placeholder="Enter country">
            </div>
            <div class="form-group">
                <label for="city">City:</label>
                <input type="text" id="city" name="city" placeholder="Enter city">
            </div>
            <button type="submit" class="submit-btn">Search Hotels</button>
        </form>
    </div>

    <div id="loading" class="loading">Searching for eco-friendly hotels...</div>
    <div id="error" class="error"></div>
    <div id="hotels-container"></div>

    <!-- Add Leaflet JS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js"></script>
    <script>
        const searchForm = document.getElementById('searchForm');
        const loadingDiv = document.getElementById('loading');
        const errorDiv = document.getElementById('error');
        const hotelsContainer = document.getElementById('hotels-container');
        const maps = new Map(); // Store map instances

        // Function to get coordinates from address using OpenStreetMap Nominatim
        async function getCoordinates(city, country) {
            const query = encodeURIComponent(`${city}, ${country}`);
            try {
                const response = await fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${query}`);
                const data = await response.json();
                if (data && data.length > 0) {
                    return [parseFloat(data[0].lat), parseFloat(data[0].lon)];
                }
                return null;
            } catch (error) {
                console.error('Geocoding error:', error);
                return null;
            }
        }

        searchForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const country = document.getElementById('country').value.trim();
            const city = document.getElementById('city').value.trim();

            if (!country && !city) {
                showError('Please enter at least one search criteria');
                return;
            }

            showLoading(true);
            clearResults();
            hideError();

            try {
                const response = await fetch('/api/hotels', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ country, city })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const hotels = await response.json();
                await displayHotels(hotels);
            } catch (error) {
                showError('An error occurred while searching for hotels. Please try again.');
                console.error('Search error:', error);
            } finally {
                showLoading(false);
            }
        });

        async function displayHotels(hotels) {
            if (hotels.length === 0) {
                showError('No hotels found matching your criteria');
                return;
            }

            for (const hotel of hotels) {
                const hotelResult = document.createElement('div');
                hotelResult.className = 'hotel-result';
                
                // Create hotel info section
                const hotelInfo = document.createElement('div');
                hotelInfo.className = 'hotel-info';
                hotelInfo.innerHTML = `
                    <h2 class="hotel-name">${hotel.hotelName}</h2>
                    <div class="sustainability-rating">
                        Sustainability Rating: ${hotel.sustainabilityRating}/5
                    </div>
                    <p><strong>Location:</strong> ${hotel.location.city}, ${hotel.location.country}</p>
                    <div class="hotel-features">
                        <h3>Overview</h3>
                        <p>${hotel.description.overview}</p>
                        
                        <h3>Sustainability Features</h3>
                        <ul class="feature-list">
                            ${hotel.description.sustainabilityFeatures.map(feature => 
                                `<li>${feature}</li>`
                            ).join('')}
                        </ul>

                        <h3>Amenities</h3>
                        <ul class="feature-list">
                            ${hotel.description.amenities.map(amenity => 
                                `<li>${amenity}</li>`
                            ).join('')}
                        </ul>
                    </div>
                `;

                // Create map container
                const mapContainer = document.createElement('div');
                mapContainer.className = 'map-container';
                const mapId = `map-${hotels.indexOf(hotel)}`;
                mapContainer.id = mapId;

                // Add both sections to the result container
                hotelResult.appendChild(hotelInfo);
                hotelResult.appendChild(mapContainer);
                hotelsContainer.appendChild(hotelResult);

                // Initialize map and get coordinates
                const coordinates = await getCoordinates(hotel.location.city, hotel.location.country);
                if (coordinates) {
                    const map = L.map(mapId).setView(coordinates, 13);
                    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                        attribution: 'Â© OpenStreetMap contributors'
                    }).addTo(map);
                    
                    // Add marker
                    L.marker(coordinates)
                        .addTo(map)
                        .bindPopup(`<b>${hotel.hotelName}</b><br>${hotel.location.city}, ${hotel.location.country}`);
                    
                    maps.set(mapId, map);
                }
            }
        }

        function showLoading(show) {
            loadingDiv.style.display = show ? 'block' : 'none';
        }

        function showError(message) {
            errorDiv.textContent = message;
            errorDiv.style.display = 'block';
        }

        function hideError() {
            errorDiv.style.display = 'none';
        }

        function clearResults() {
            // Clean up existing maps
            maps.forEach(map => map.remove());
            maps.clear();
            hotelsContainer.innerHTML = '';
        }
    </script>
</body>
</html>